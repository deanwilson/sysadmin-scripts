#!/usr/bin/ruby
require 'github_api'
require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = <<-ENDOFUSAGE
    get-default-github-branch queries the repositories owned by the
    given user or organisation and prints the repoitory name and the
    name of the default branch.

    Usage:
      $ get-default-github-branch --user deanwilson
      ...
      alexa-skill-registered-domain default branch of master
      alexa-skill-webstatuscode default branch of master
      ...
  ENDOFUSAGE

  opts.on('-a', '--archived',
          'check archived repos.') { |v| options[:archived] = v }

  opts.on('-s', '--summary',
          'summerise the number of repos with each default branch.') { |v| options[:summary] = v }

  opts.on('-u', '--user USER',
          'github user to query.') { |user| options[:user] = user || ARGV[0] }

  opts.on_tail('-h', '--help', 'Show this message') do
    puts opts
    exit
  end
end.parse!

if options[:user].nil?
  if ARGV[0]
    options[:user] = ARGV[0]
  else
    puts 'Please supply a github username'
    exit 1
  end
end

config = {
  user: options[:user],
  auto_pagination: true,
  token: ENV['GITHUB_TOKEN']
}

github = Github.new oauth_token: config[:token]

# don't check forks as we don't control their branch names
repos = github.repos.list(config).reject { |r| r.fork }

# ignore archived repos by default.
repos.reject! { |r| r.archived } unless options[:archived]

repo_branches = Hash.new { |h,k| h[k] = [ ] }
repos.each do |repo|
  repo_branches[repo['default_branch']].push repo['name']
end

if options[:summary]
  repo_branches.keys.sort.each do |default_branch|
    total = repo_branches[default_branch].length
    puts "#{default_branch} is used by #{total}"
  end
  exit 0
end

repo_branches.keys.each do |default_branch|
  repo_branches[default_branch].each do |repo|
   puts "#{repo} default branch of #{default_branch}"
  end
end
